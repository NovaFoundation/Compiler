package "spectra/tree/nodes/annotations"

import "spectra/tree/nodes/Node"
import "spectra/util/Location"

import "spectra/util/CompilerStringFunctions"

/// @Annotation extension that represents
/// 
/// author: Braden Steffaniak
class StaticAnnotation extends Annotation implements Modifier {
    /// Create a new StaticAnnotation node.
    /// 
    /// #exampleInputs
    /// 
    /// parent:   The parent of the StaticAnnotation node.
    /// location: The location of the input text in the source file.
    public construct(Node parent = null, Location location = Location.INVALID) {
        super(parent, location)
    }
    
    /// Parse the given input into a StaticAnnotation node. If the input cannot be parsed
    /// into a StaticAnnotation node, null is returned.
    /// 
    /// #exampleInputs:
    ///     Example inputs:
    ///     * 
    ///     * 
    ///     * 
    /// 
    /// input:    The input string to parse into a StaticAnnotation instance.
    /// parent:   The parent of the StaticAnnotation node.
    /// location: The location of the input text in the source file.
    /// require:  Whether or not to throw a syntax error if the input could not
    ///           be parsed.
    /// return:   The parsed StaticAnnotation node, if successful; null otherwise.
    public static parse(String type, String parameters, Node parent = null, Location location = Location.INVALID, Bool require = true) -> StaticAnnotation => null {
        if (type == "Static" && parameters.count == 0) {
            var node = new StaticAnnotation(parent, location)
            
            return node
        }
    }
}